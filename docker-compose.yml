version: '2'
services:
  zookeeper:
    image: confluent/zookeeper:3.4.6-cp1
    ports:
      - '2181:2181'


  kafka:
    image: confluent/kafka:0.10.0.0-cp1
    ports:
      - '9092:9092'
    environment:
      - KAFKA_ADVERTISED_HOST_NAME=
      - KAFKA_AUTO_CREATE_TOPICS_ENABLE=true
      - KAFKA_LOG_CLEANUP_POLICY=compact


  postgres:
    image: confluent/postgres-bw:0.1
    ports:
      - '54321:5432'


  bottledwater:
    image: boundlessgeo/bottledwater-json
    command: --output-format=json --allow-unkeyed
    environment:
      - DB_NAME=spacon


  nginx:
    image: jwilder/nginx-proxy
    ports:
      - '80:80'
    volumes:
      - /var/run/docker.sock:/tmp/docker.sock:ro


  mosquitto:
    image: boundlessgeo/mosquitto
    ports:
      - '1883:1883'
      - '8883:8883'
      - '8884:8884'
      - '9883:9883'


  postgis:
    image: mdillon/postgis
    ports:
      - '5432:5432'

  efc-server:
    build: .
    command: 'java -jar /opt/spacon-server.jar'
    depends_on:
      - mosquitto
      - postgis
    ports:
      - '8085:8085'
    volumes:
      - './server/tls:/opt/tls:ro'
    environment:
      - DB_HOST=postgis
      - MQTT_BROKER_URL=ssl://mosquitto:8884
      - VIRTUAL_HOST=efc-server
      - TRUST_STORE=/opt/tls/test-cacerts.jks
      - KEY_STORE=/opt/tls/test-keystore.p12


  kafka-tools:
    image: confluent/tools:0.9.0.0-cp1


  geoserver:
    image: kartoza/geoserver:latest
    environment:
      - VIRTUAL_HOST=geoserver
      - JAVA_OPTS=-Xmx1536M -XX:MaxPermSize=756M
    ports:
      - '8080:8080'


  spatialconnect-connectors:
    image: boundlessgeo/spatialconnect-connectors:latest
    environment:
      - KAFKA_SERVERS=kafka:9092
      - TOPICS_LIST=form_data
      - GEOSERVER_URL=http://geoserver:8080/geoserver/
      - ROOT_LOG_LEVEL=INFO
