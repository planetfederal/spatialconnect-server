authorizedkeys:
  autodestroy: always
  deployment_strategy: every_node
  environment:
    - AUTHORIZED_KEYS=ssh-rsa AAAAB3NzaC1yc2EAAAADAQABAAABAQC7oJ/blBKJOHbhBbOLve6xWyzggSR/F680yTu0L1Mwp/KM1kJZTaMcsNH2GzPdHfwcliuM5xgEI45d5nRIeQJhusw+95SEdqEQdM3SIiZMyJLqRBQ3w37ewOy3VxvA5ife5jvCNdTMJcP+pxAKiNz5X7bsrhDUAvBxtvuoSFEb46DO+GQ8x1b+FaiK6PrMpFUkCDf84CjUB+zZXUnGSmPyqqd5y1Qf1a6RizmOR3oCBWRaT7Si5mfgJi8q0SmRLPCjy/+njv0PLnMjI2DSgfPvLqJR8OjxqXBU9SP6sJJ1ldDrUaA9qVfEdbDOXx/tUd38HDfbwqtrxXW4+P7mj+St
  image: 'dockercloud/authorizedkeys:latest'
  volumes:
    - '/root:/user'
  tags:
    - develop
bottledwater:
  autoredeploy: true
  environment:
    - DB_NAME=spacon
  hostname: bottledwater
  image: 'boundlessgeo/bottledwater-json:latest'
  links:
    - kafka
    - postgres
  tags:
    - develop
geoserver:
  environment:
    - 'JAVA_OPTS=-Xmx1536M -XX:MaxPermSize=756M'
    - VIRTUAL_HOST=geoserver
  image: 'kartoza/geoserver:latest'
  links:
    - nginx
    - postgis
  ports:
    - '8080:8080'
  tags:
    - develop
kafka:
  environment:
    - KAFKA_ADVERTISED_HOST_NAME=
    - KAFKA_AUTO_CREATE_TOPICS_ENABLE=true
    - KAFKA_LOG_CLEANUP_POLICY=compact
  hostname: kafka
  image: 'confluent/kafka:0.10.0.0-cp1'
  links:
    - zookeeper
  ports:
    - '9092:9092'
  tags:
    - develop
mosquitto:
  image: marcusthebrown/mosquitto
  hostname: mosquitto
  links:
    - spatialconnect-server
  ports:
    - '1883:1883'
    - '8883:8883'
    - '9883:9883'
  tags:
    - develop
nginx:
  image: 'jwilder/nginx-proxy:latest'
  ports:
    - '80:80'
  volumes:
    - '/var/run/docker.sock:/tmp/docker.sock:ro'
  tags:
    - develop
postgis:
  environment:
    - POSTGRES_USER=spacon
  image: 'mdillon/postgis:latest'
  tags:
    - develop
postgres:
  hostname: postgres
  image: 'confluent/postgres-bw:0.1'
  ports:
    - '5432:5432'
  tags:
    - develop
spatialconnect-connectors:
  autoredeploy: true
  environment:
    - 'GEOSERVER_URL=http://efc-dev.boundlessgeo.com:8080/geoserver/'
    - 'KAFKA_SERVERS=kafka:9092'
    - ROOT_LOG_LEVEL=INFO
    - TOPICS_LIST=form_data
  image: 'boundlessgeo/spatialconnect-connectors:latest'
  links:
    - geoserver
    - kafka
  tags:
    - develop
spatialconnect-server:
  autoredeploy: true
  command: 'npm run start:development'
  environment:
    - NODE_ENV=development
    - PGDATABASE=postgres
    - PGHOST=postgres
    - PGUSER=postgres
    - MQTT_BROKER_HOST=mosquitto
    - VIRTUAL_HOST=efc-dev.boundlessgeo.com
  image: 'boundlessgeo/spatialconnect-server:latest'
  links:
    - nginx
    - postgres
  ports:
    - '8085:8085'
  tags:
    - develop
zookeeper:
  hostname: zookeeper
  image: 'confluent/zookeeper:3.4.6-cp1'
  ports:
    - '2181:2181'
  tags:
    - develop
