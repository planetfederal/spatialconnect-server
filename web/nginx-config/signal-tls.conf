server {
  listen       80;
  server_name  __this.will.be.replaced.by.DOMAIN_NAME__;

  # allow letsencrypt's acme challenge to get to the certbot container
  location /.well-known/acme-challenge {
      proxy_pass http://certbot;
      proxy_set_header Host            $host;
      proxy_set_header X-Forwarded-For $remote_addr;
      proxy_set_header X-Forwarded-Proto https;
  }

  # permanently redirect all other http traffic to the https endpoint
  location / {
    return 301 https://$host$request_uri;
  }

}

server {
  listen 443;
  server_name __this.will.be.replaced.by.DOMAIN_NAME__;

  ssl on;
  ssl_certificate /etc/letsencrypt/live/__this.will.be.replaced.by.DOMAIN_NAME__/fullchain.pem;
  ssl_certificate_key /etc/letsencrypt/live/__this.will.be.replaced.by.DOMAIN_NAME__/privkey.pem;
  ssl_session_timeout 5m;
  ssl_protocols TLSv1 TLSv1.1 TLSv1.2;
  ssl_ciphers 'EECDH+AESGCM:EDH+AESGCM:AES256+EECDH:AES256+EDH';
  ssl_prefer_server_ciphers on;

  ssl_session_cache shared:SSL:10m;
  #ssl_dhparam /etc/ssl/private/dhparams.pem;


  location /.well-known/acme-challenge {
    proxy_pass http://certbot;
    proxy_set_header Host            $host;
    proxy_set_header X-Forwarded-For $remote_addr;
    proxy_set_header X-Forwarded-Proto https;
  }


  location /geoserver {
    proxy_pass http://geoserver:8080/geoserver;
    proxy_set_header Host            $host;
    proxy_set_header X-Forwarded-For $remote_addr;
    proxy_set_header X-Forwarded-Proto https;
  }

  location /api {
    proxy_pass http://spatialconnect-server:8085/api;
    proxy_set_header Host            $host;
    proxy_set_header X-Forwarded-For $remote_addr;
    proxy_set_header X-Forwarded-Proto https;
  }

  location / {
    root   /usr/share/nginx/html;
    index  index.html index.htm;
    try_files $uri $uri/ /index.html;
  }

  # redirect server error pages to the static page /50x.html
  error_page   500 502 503 504  /50x.html;
  location = /50x.html {
    root   /usr/share/nginx/html;
  }
}
